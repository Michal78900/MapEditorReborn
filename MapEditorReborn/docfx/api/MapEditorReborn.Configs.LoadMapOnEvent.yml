### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Configs.LoadMapOnEvent
  commentId: T:MapEditorReborn.Configs.LoadMapOnEvent
  id: LoadMapOnEvent
  parent: MapEditorReborn.Configs
  children:
  - MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
  - MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
  - MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
  langs:
  - csharp
  - vb
  name: LoadMapOnEvent
  nameWithType: LoadMapOnEvent
  fullName: MapEditorReborn.Configs.LoadMapOnEvent
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Configs/LoadMapOnEvent.cs
    id: LoadMapOnEvent
    path: Configs/LoadMapOnEvent.cs
    startLine: 14
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Configs
  summary: "\nThe LoadMapOnEvent config.\n"
  example: []
  syntax:
    content: public sealed class LoadMapOnEvent
    content.vb: Public NotInheritable Class LoadMapOnEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
  commentId: P:MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
  id: OnGenerated
  parent: MapEditorReborn.Configs.LoadMapOnEvent
  langs:
  - csharp
  - vb
  name: OnGenerated
  nameWithType: LoadMapOnEvent.OnGenerated
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Configs/LoadMapOnEvent.cs
    id: OnGenerated
    path: Configs/LoadMapOnEvent.cs
    startLine: 19
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Configs
  summary: "\nGets a list of possible maps.\n"
  example: []
  syntax:
    content: public List<string> OnGenerated { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property OnGenerated As List(Of String)
  overload: MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
  commentId: P:MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
  id: OnRoundStarted
  parent: MapEditorReborn.Configs.LoadMapOnEvent
  langs:
  - csharp
  - vb
  name: OnRoundStarted
  nameWithType: LoadMapOnEvent.OnRoundStarted
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Configs/LoadMapOnEvent.cs
    id: OnRoundStarted
    path: Configs/LoadMapOnEvent.cs
    startLine: 24
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Configs
  summary: "\nGets a list of possible maps.\n"
  example: []
  syntax:
    content: public List<string> OnRoundStarted { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property OnRoundStarted As List(Of String)
  overload: MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
  commentId: P:MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
  id: OnWarheadDetonated
  parent: MapEditorReborn.Configs.LoadMapOnEvent
  langs:
  - csharp
  - vb
  name: OnWarheadDetonated
  nameWithType: LoadMapOnEvent.OnWarheadDetonated
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Configs/LoadMapOnEvent.cs
    id: OnWarheadDetonated
    path: Configs/LoadMapOnEvent.cs
    startLine: 29
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Configs
  summary: "\nGets a list of possible maps.\n"
  example: []
  syntax:
    content: public List<string> OnWarheadDetonated { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property OnWarheadDetonated As List(Of String)
  overload: MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: MapEditorReborn.Configs
  commentId: N:MapEditorReborn.Configs
  name: MapEditorReborn.Configs
  nameWithType: MapEditorReborn.Configs
  fullName: MapEditorReborn.Configs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated*
  commentId: Overload:MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
  name: OnGenerated
  nameWithType: LoadMapOnEvent.OnGenerated
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnGenerated
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted*
  commentId: Overload:MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
  name: OnRoundStarted
  nameWithType: LoadMapOnEvent.OnRoundStarted
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnRoundStarted
- uid: MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated*
  commentId: Overload:MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
  name: OnWarheadDetonated
  nameWithType: LoadMapOnEvent.OnWarheadDetonated
  fullName: MapEditorReborn.Configs.LoadMapOnEvent.OnWarheadDetonated
