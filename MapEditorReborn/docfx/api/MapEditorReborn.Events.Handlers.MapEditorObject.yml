### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Events.Handlers.MapEditorObject
  commentId: T:MapEditorReborn.Events.Handlers.MapEditorObject
  id: MapEditorObject
  parent: MapEditorReborn.Events.Handlers
  children:
  - MapEditorReborn.Events.Handlers.MapEditorObject.BringingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectPosition
  - MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectRotation
  - MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectScale
  - MapEditorReborn.Events.Handlers.MapEditorObject.CopyingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.DeletingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.GrabbingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.ReleasingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.SelectingObject
  - MapEditorReborn.Events.Handlers.MapEditorObject.ShowingObjectHint
  - MapEditorReborn.Events.Handlers.MapEditorObject.SpawningObject
  langs:
  - csharp
  - vb
  name: MapEditorObject
  nameWithType: MapEditorObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: MapEditorObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 18
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\n<see cref=\"!:API.Features.Objects.MapEditorObject\"></see> related events.\n"
  example: []
  syntax:
    content: public static class MapEditorObject
    content.vb: Public Module MapEditorObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.DeletingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.DeletingObject
  id: DeletingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: DeletingObject
  nameWithType: MapEditorObject.DeletingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.DeletingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: DeletingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 23
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before deleting a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<DeletingObjectEventArgs> DeletingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs}
    content.vb: Public Shared Event DeletingObject As CustomEventHandler(Of DeletingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.SpawningObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.SpawningObject
  id: SpawningObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: SpawningObject
  nameWithType: MapEditorObject.SpawningObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.SpawningObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: SpawningObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 28
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before spawning a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<SpawningObjectEventArgs> SpawningObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs}
    content.vb: Public Shared Event SpawningObject As CustomEventHandler(Of SpawningObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.SelectingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.SelectingObject
  id: SelectingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: SelectingObject
  nameWithType: MapEditorObject.SelectingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.SelectingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: SelectingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 33
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before selecting a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<SelectingObjectEventArgs> SelectingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs}
    content.vb: Public Shared Event SelectingObject As CustomEventHandler(Of SelectingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.CopyingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.CopyingObject
  id: CopyingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: CopyingObject
  nameWithType: MapEditorObject.CopyingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.CopyingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: CopyingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 38
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before copying a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<CopyingObjectEventArgs> CopyingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs}
    content.vb: Public Shared Event CopyingObject As CustomEventHandler(Of CopyingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectPosition
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectPosition
  id: ChangingObjectPosition
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: ChangingObjectPosition
  nameWithType: MapEditorObject.ChangingObjectPosition
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectPosition
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: ChangingObjectPosition
    path: Events/Handlers/MapEditorObject.cs
    startLine: 43
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before changing a <see cref=\"!:API.Features.Objects.MapEditorObject.RelativePosition\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<ChangingObjectPositionEventArgs> ChangingObjectPosition
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs}
    content.vb: Public Shared Event ChangingObjectPosition As CustomEventHandler(Of ChangingObjectPositionEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectRotation
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectRotation
  id: ChangingObjectRotation
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: ChangingObjectRotation
  nameWithType: MapEditorObject.ChangingObjectRotation
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectRotation
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: ChangingObjectRotation
    path: Events/Handlers/MapEditorObject.cs
    startLine: 48
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before changing a <see cref=\"!:API.Features.Objects.MapEditorObject.RelativeRotation\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<ChangingObjectRotationEventArgs> ChangingObjectRotation
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs}
    content.vb: Public Shared Event ChangingObjectRotation As CustomEventHandler(Of ChangingObjectRotationEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectScale
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectScale
  id: ChangingObjectScale
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: ChangingObjectScale
  nameWithType: MapEditorObject.ChangingObjectScale
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.ChangingObjectScale
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: ChangingObjectScale
    path: Events/Handlers/MapEditorObject.cs
    startLine: 53
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before changing a <xref href=\"MapEditorReborn.Commands.ModifyingCommands.Scale.Scale\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<ChangingObjectScaleEventArgs> ChangingObjectScale
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs}
    content.vb: Public Shared Event ChangingObjectScale As CustomEventHandler(Of ChangingObjectScaleEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.GrabbingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.GrabbingObject
  id: GrabbingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: GrabbingObject
  nameWithType: MapEditorObject.GrabbingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.GrabbingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: GrabbingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 58
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before grabbing a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<GrabbingObjectEventArgs> GrabbingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs}
    content.vb: Public Shared Event GrabbingObject As CustomEventHandler(Of GrabbingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.ReleasingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.ReleasingObject
  id: ReleasingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: ReleasingObject
  nameWithType: MapEditorObject.ReleasingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.ReleasingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: ReleasingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 63
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before releasing a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<ReleasingObjectEventArgs> ReleasingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs}
    content.vb: Public Shared Event ReleasingObject As CustomEventHandler(Of ReleasingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.BringingObject
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.BringingObject
  id: BringingObject
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: BringingObject
  nameWithType: MapEditorObject.BringingObject
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.BringingObject
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: BringingObject
    path: Events/Handlers/MapEditorObject.cs
    startLine: 68
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before bringing a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<BringingObjectEventArgs> BringingObject
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.BringingObjectEventArgs}
    content.vb: Public Shared Event BringingObject As CustomEventHandler(Of BringingObjectEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.MapEditorObject.ShowingObjectHint
  commentId: E:MapEditorReborn.Events.Handlers.MapEditorObject.ShowingObjectHint
  id: ShowingObjectHint
  parent: MapEditorReborn.Events.Handlers.MapEditorObject
  langs:
  - csharp
  - vb
  name: ShowingObjectHint
  nameWithType: MapEditorObject.ShowingObjectHint
  fullName: MapEditorReborn.Events.Handlers.MapEditorObject.ShowingObjectHint
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/MapEditorObject.cs
    id: ShowingObjectHint
    path: Events/Handlers/MapEditorObject.cs
    startLine: 73
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before showing a <see cref=\"!:API.Features.Objects.MapEditorObject\"></see>&apos;s hint.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<ShowingObjectHintEventArgs> ShowingObjectHint
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs}
    content.vb: Public Shared Event ShowingObjectHint As CustomEventHandler(Of ShowingObjectHintEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MapEditorReborn.Events.Handlers
  commentId: N:MapEditorReborn.Events.Handlers
  name: MapEditorReborn.Events.Handlers
  nameWithType: MapEditorReborn.Events.Handlers
  fullName: MapEditorReborn.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<DeletingObjectEventArgs>
  nameWithType: CustomEventHandler<DeletingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of DeletingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs)
  name.vb: CustomEventHandler(Of DeletingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs
    name: DeletingObjectEventArgs
    nameWithType: DeletingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs
    name: DeletingObjectEventArgs
    nameWithType: DeletingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.DeletingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler`1
  isExternal: true
  name: CustomEventHandler<>
  nameWithType: CustomEventHandler<>
  fullName: CustomEventHandler<>
  nameWithType.vb: CustomEventHandler(Of )
  fullName.vb: CustomEventHandler(Of )
  name.vb: CustomEventHandler(Of )
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<SpawningObjectEventArgs>
  nameWithType: CustomEventHandler<SpawningObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of SpawningObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs)
  name.vb: CustomEventHandler(Of SpawningObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs
    name: SpawningObjectEventArgs
    nameWithType: SpawningObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs
    name: SpawningObjectEventArgs
    nameWithType: SpawningObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SpawningObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<SelectingObjectEventArgs>
  nameWithType: CustomEventHandler<SelectingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of SelectingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs)
  name.vb: CustomEventHandler(Of SelectingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs
    name: SelectingObjectEventArgs
    nameWithType: SelectingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs
    name: SelectingObjectEventArgs
    nameWithType: SelectingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SelectingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<CopyingObjectEventArgs>
  nameWithType: CustomEventHandler<CopyingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of CopyingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs)
  name.vb: CustomEventHandler(Of CopyingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs
    name: CopyingObjectEventArgs
    nameWithType: CopyingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs
    name: CopyingObjectEventArgs
    nameWithType: CopyingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.CopyingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ChangingObjectPositionEventArgs>
  nameWithType: CustomEventHandler<ChangingObjectPositionEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs>
  nameWithType.vb: CustomEventHandler(Of ChangingObjectPositionEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs)
  name.vb: CustomEventHandler(Of ChangingObjectPositionEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs
    name: ChangingObjectPositionEventArgs
    nameWithType: ChangingObjectPositionEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs
    name: ChangingObjectPositionEventArgs
    nameWithType: ChangingObjectPositionEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectPositionEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ChangingObjectRotationEventArgs>
  nameWithType: CustomEventHandler<ChangingObjectRotationEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs>
  nameWithType.vb: CustomEventHandler(Of ChangingObjectRotationEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs)
  name.vb: CustomEventHandler(Of ChangingObjectRotationEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs
    name: ChangingObjectRotationEventArgs
    nameWithType: ChangingObjectRotationEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs
    name: ChangingObjectRotationEventArgs
    nameWithType: ChangingObjectRotationEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectRotationEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: MapEditorReborn.Commands.ModifyingCommands.Scale.Scale
  commentId: T:MapEditorReborn.Commands.ModifyingCommands.Scale.Scale
  name: Scale
  nameWithType: Scale
  fullName: MapEditorReborn.Commands.ModifyingCommands.Scale.Scale
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ChangingObjectScaleEventArgs>
  nameWithType: CustomEventHandler<ChangingObjectScaleEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs>
  nameWithType.vb: CustomEventHandler(Of ChangingObjectScaleEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs)
  name.vb: CustomEventHandler(Of ChangingObjectScaleEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs
    name: ChangingObjectScaleEventArgs
    nameWithType: ChangingObjectScaleEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs
    name: ChangingObjectScaleEventArgs
    nameWithType: ChangingObjectScaleEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ChangingObjectScaleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<GrabbingObjectEventArgs>
  nameWithType: CustomEventHandler<GrabbingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of GrabbingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs)
  name.vb: CustomEventHandler(Of GrabbingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs
    name: GrabbingObjectEventArgs
    nameWithType: GrabbingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs
    name: GrabbingObjectEventArgs
    nameWithType: GrabbingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.GrabbingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ReleasingObjectEventArgs>
  nameWithType: CustomEventHandler<ReleasingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of ReleasingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs)
  name.vb: CustomEventHandler(Of ReleasingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs
    name: ReleasingObjectEventArgs
    nameWithType: ReleasingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs
    name: ReleasingObjectEventArgs
    nameWithType: ReleasingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ReleasingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.BringingObjectEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.BringingObjectEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<BringingObjectEventArgs>
  nameWithType: CustomEventHandler<BringingObjectEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.BringingObjectEventArgs>
  nameWithType.vb: CustomEventHandler(Of BringingObjectEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.BringingObjectEventArgs)
  name.vb: CustomEventHandler(Of BringingObjectEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
    name: BringingObjectEventArgs
    nameWithType: BringingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
    name: BringingObjectEventArgs
    nameWithType: BringingObjectEventArgs
    fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ShowingObjectHintEventArgs>
  nameWithType: CustomEventHandler<ShowingObjectHintEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs>
  nameWithType.vb: CustomEventHandler(Of ShowingObjectHintEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs)
  name.vb: CustomEventHandler(Of ShowingObjectHintEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs
    name: ShowingObjectHintEventArgs
    nameWithType: ShowingObjectHintEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs
    name: ShowingObjectHintEventArgs
    nameWithType: ShowingObjectHintEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ShowingObjectHintEventArgs
  - name: )
    nameWithType: )
    fullName: )
