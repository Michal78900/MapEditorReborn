### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Events.Handlers.Utility
  commentId: T:MapEditorReborn.Events.Handlers.Utility
  id: Utility
  parent: MapEditorReborn.Events.Handlers
  children:
  - MapEditorReborn.Events.Handlers.Utility.DroppingToolGun
  - MapEditorReborn.Events.Handlers.Utility.PickingUpToolGun
  langs:
  - csharp
  - vb
  name: Utility
  nameWithType: Utility
  fullName: MapEditorReborn.Events.Handlers.Utility
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Utility.cs
    id: Utility
    path: Events/Handlers/Utility.cs
    startLine: 17
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nThe utility commands related events.\n"
  example: []
  syntax:
    content: public static class Utility
    content.vb: Public Module Utility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MapEditorReborn.Events.Handlers.Utility.PickingUpToolGun
  commentId: E:MapEditorReborn.Events.Handlers.Utility.PickingUpToolGun
  id: PickingUpToolGun
  parent: MapEditorReborn.Events.Handlers.Utility
  langs:
  - csharp
  - vb
  name: PickingUpToolGun
  nameWithType: Utility.PickingUpToolGun
  fullName: MapEditorReborn.Events.Handlers.Utility.PickingUpToolGun
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Utility.cs
    id: PickingUpToolGun
    path: Events/Handlers/Utility.cs
    startLine: 22
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before picking up the ToolGun.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<PickingUpToolGunEventArgs> PickingUpToolGun
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs}
    content.vb: Public Shared Event PickingUpToolGun As CustomEventHandler(Of PickingUpToolGunEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.Utility.DroppingToolGun
  commentId: E:MapEditorReborn.Events.Handlers.Utility.DroppingToolGun
  id: DroppingToolGun
  parent: MapEditorReborn.Events.Handlers.Utility
  langs:
  - csharp
  - vb
  name: DroppingToolGun
  nameWithType: Utility.DroppingToolGun
  fullName: MapEditorReborn.Events.Handlers.Utility.DroppingToolGun
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Utility.cs
    id: DroppingToolGun
    path: Events/Handlers/Utility.cs
    startLine: 27
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nInvoked before dropping the ToolGun.\n"
  example: []
  syntax:
    content: public static event CustomEventHandler<DroppingToolGunEventArgs> DroppingToolGun
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs}
    content.vb: Public Shared Event DroppingToolGun As CustomEventHandler(Of DroppingToolGunEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MapEditorReborn.Events.Handlers
  commentId: N:MapEditorReborn.Events.Handlers
  name: MapEditorReborn.Events.Handlers
  nameWithType: MapEditorReborn.Events.Handlers
  fullName: MapEditorReborn.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<PickingUpToolGunEventArgs>
  nameWithType: CustomEventHandler<PickingUpToolGunEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs>
  nameWithType.vb: CustomEventHandler(Of PickingUpToolGunEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs)
  name.vb: CustomEventHandler(Of PickingUpToolGunEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs
    name: PickingUpToolGunEventArgs
    nameWithType: PickingUpToolGunEventArgs
    fullName: MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs
    name: PickingUpToolGunEventArgs
    nameWithType: PickingUpToolGunEventArgs
    fullName: MapEditorReborn.Events.EventArgs.PickingUpToolGunEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler`1
  isExternal: true
  name: CustomEventHandler<>
  nameWithType: CustomEventHandler<>
  fullName: CustomEventHandler<>
  nameWithType.vb: CustomEventHandler(Of )
  fullName.vb: CustomEventHandler(Of )
  name.vb: CustomEventHandler(Of )
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<DroppingToolGunEventArgs>
  nameWithType: CustomEventHandler<DroppingToolGunEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs>
  nameWithType.vb: CustomEventHandler(Of DroppingToolGunEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs)
  name.vb: CustomEventHandler(Of DroppingToolGunEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs
    name: DroppingToolGunEventArgs
    nameWithType: DroppingToolGunEventArgs
    fullName: MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs
    name: DroppingToolGunEventArgs
    nameWithType: DroppingToolGunEventArgs
    fullName: MapEditorReborn.Events.EventArgs.DroppingToolGunEventArgs
  - name: )
    nameWithType: )
    fullName: )
