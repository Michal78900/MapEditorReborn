### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  commentId: T:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  id: BringingObjectEventArgs
  parent: MapEditorReborn.Events.EventArgs
  children:
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor(Player,MapEditorObject,Vector3,System.Boolean)
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
  - MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
  langs:
  - csharp
  - vb
  name: BringingObjectEventArgs
  nameWithType: BringingObjectEventArgs
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: BringingObjectEventArgs
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 17
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nContains all information before a <see cref=\"!:MapEditorObject\"></see> is brought.\n"
  example: []
  syntax:
    content: 'public class BringingObjectEventArgs : EventArgs'
    content.vb: >-
      Public Class BringingObjectEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor(Player,MapEditorObject,Vector3,System.Boolean)
  commentId: M:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor(Player,MapEditorObject,Vector3,System.Boolean)
  id: '#ctor(Player,MapEditorObject,Vector3,System.Boolean)'
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: BringingObjectEventArgs(Player, MapEditorObject, Vector3, Boolean)
  nameWithType: BringingObjectEventArgs.BringingObjectEventArgs(Player, MapEditorObject, Vector3, Boolean)
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.BringingObjectEventArgs(Player, MapEditorObject, Vector3, System.Boolean)
  type: Constructor
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: .ctor
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 26
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nInitializes a new instance of the <xref href=\"MapEditorReborn.Events.EventArgs.BringingObjectEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BringingObjectEventArgs(Player player, MapEditorObject mapEditorObject, Vector3 newPosition, bool isAllowed = true)
    parameters:
    - id: player
      type: Player
      description: <inheritdoc cref="P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player"></inheritdoc>
    - id: mapEditorObject
      type: MapEditorObject
      description: <inheritdoc cref="P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object"></inheritdoc>
    - id: newPosition
      type: Vector3
      description: <inheritdoc cref="P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position"></inheritdoc>
    - id: isAllowed
      type: System.Boolean
      description: <inheritdoc cref="P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed"></inheritdoc>
    content.vb: Public Sub New(player As Player, mapEditorObject As MapEditorObject, newPosition As Vector3, isAllowed As Boolean = True)
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
  commentId: P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
  id: Player
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: BringingObjectEventArgs.Player
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: Player
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 37
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nGets the <see cref=\"!:Exiled.API.Features.Player\"></see> who&apos;s grabbing the <see cref=\"!:MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public Player Player { get; }
    parameters: []
    return:
      type: Player
    content.vb: Public ReadOnly Property Player As Player
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
  commentId: P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
  id: Object
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: BringingObjectEventArgs.Object
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: Object
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 42
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nGets or sets the <see cref=\"!:MapEditorObject\"></see> which is being brought.\n"
  example: []
  syntax:
    content: public MapEditorObject Object { get; set; }
    parameters: []
    return:
      type: MapEditorObject
    content.vb: Public Property Object As MapEditorObject
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
  commentId: P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
  id: Position
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: BringingObjectEventArgs.Position
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: Position
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 47
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nGets or sets the position to be set after bringing the <see cref=\"!:MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: Vector3
    content.vb: Public Property Position As Vector3
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
  commentId: P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
  id: Response
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: BringingObjectEventArgs.Response
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: Response
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 52
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nGets or sets the response to be displayed if the event cannot be executed.\n"
  example: []
  syntax:
    content: public string Response { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Response As String
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
  commentId: P:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
  id: IsAllowed
  parent: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  langs:
  - csharp
  - vb
  name: IsAllowed
  nameWithType: BringingObjectEventArgs.IsAllowed
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/EventArgs/BringingObjectEventArgs.cs
    id: IsAllowed
    path: Events/EventArgs/BringingObjectEventArgs.cs
    startLine: 57
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.EventArgs
  summary: "\nGets or sets a value indicating whether the <see cref=\"!:MapEditorObject\"></see> can be brought.\n"
  example: []
  syntax:
    content: public bool IsAllowed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAllowed As Boolean
  overload: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: MapEditorReborn.Events.EventArgs
  commentId: N:MapEditorReborn.Events.EventArgs
  name: MapEditorReborn.Events.EventArgs
  nameWithType: MapEditorReborn.Events.EventArgs
  fullName: MapEditorReborn.Events.EventArgs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  commentId: T:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
  name: BringingObjectEventArgs
  nameWithType: BringingObjectEventArgs
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.#ctor
  name: BringingObjectEventArgs
  nameWithType: BringingObjectEventArgs.BringingObjectEventArgs
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.BringingObjectEventArgs
- uid: Player
  isExternal: true
  name: Player
  nameWithType: Player
  fullName: Player
- uid: MapEditorObject
  isExternal: true
  name: MapEditorObject
  nameWithType: MapEditorObject
  fullName: MapEditorObject
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
  name: Player
  nameWithType: BringingObjectEventArgs.Player
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Player
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
  name: Object
  nameWithType: BringingObjectEventArgs.Object
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Object
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
  name: Position
  nameWithType: BringingObjectEventArgs.Position
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Position
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
  name: Response
  nameWithType: BringingObjectEventArgs.Response
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.Response
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed*
  commentId: Overload:MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
  name: IsAllowed
  nameWithType: BringingObjectEventArgs.IsAllowed
  fullName: MapEditorReborn.Events.EventArgs.BringingObjectEventArgs.IsAllowed
