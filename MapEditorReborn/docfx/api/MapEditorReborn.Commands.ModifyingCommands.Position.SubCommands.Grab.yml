### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  commentId: T:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  id: Grab
  parent: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  children:
  - MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
  - MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
  - MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
  - MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute(System.ArraySegment{System.String},ICommandSender,System.String@)
  langs:
  - csharp
  - vb
  name: Grab
  nameWithType: Grab
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    id: Grab
    path: Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    startLine: 25
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  summary: "\nGrabs a specific <see cref=\"!:MapEditorObject\"></see>.\n"
  example: []
  syntax:
    content: 'public class Grab : ICommand'
    content.vb: >-
      Public Class Grab

          Inherits ICommand
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
  commentId: P:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
  id: Command
  parent: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: Grab.Command
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    id: Command
    path: Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    startLine: 28
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  example: []
  syntax:
    content: public string Command { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Command As String
  overload: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
  commentId: P:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
  id: Aliases
  parent: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: Grab.Aliases
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    id: Aliases
    path: Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    startLine: 31
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  example: []
  syntax:
    content: public string[] Aliases { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property Aliases As String()
  overload: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
  commentId: P:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
  id: Description
  parent: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Grab.Description
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
  type: Property
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    id: Description
    path: Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    startLine: 34
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute(System.ArraySegment{System.String},ICommandSender,System.String@)
  commentId: M:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute(System.ArraySegment{System.String},ICommandSender,System.String@)
  id: Execute(System.ArraySegment{System.String},ICommandSender,System.String@)
  parent: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab
  langs:
  - csharp
  - vb
  name: Execute(ArraySegment<String>, ICommandSender, out String)
  nameWithType: Grab.Execute(ArraySegment<String>, ICommandSender, out String)
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute(System.ArraySegment<System.String>, ICommandSender, out System.String)
  type: Method
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    id: Execute
    path: Commands/ModifyingCommands/Position/SubCommands/Grab.cs
    startLine: 37
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  example: []
  syntax:
    content: public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response)
    parameters:
    - id: arguments
      type: System.ArraySegment{System.String}
    - id: sender
      type: ICommandSender
    - id: response
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Execute(arguments As ArraySegment(Of String), sender As ICommandSender, ByRef response As String) As Boolean
  overload: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute*
  nameWithType.vb: Grab.Execute(ArraySegment(Of String), ICommandSender, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute(System.ArraySegment(Of System.String), ICommandSender, ByRef System.String)
  name.vb: Execute(ArraySegment(Of String), ICommandSender, ByRef String)
references:
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  commentId: N:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  name: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  nameWithType: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command*
  commentId: Overload:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
  name: Command
  nameWithType: Grab.Command
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Command
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases*
  commentId: Overload:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
  name: Aliases
  nameWithType: Grab.Aliases
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Aliases
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description*
  commentId: Overload:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
  name: Description
  nameWithType: Grab.Description
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Description
- uid: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute*
  commentId: Overload:MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute
  name: Execute
  nameWithType: Grab.Execute
  fullName: MapEditorReborn.Commands.ModifyingCommands.Position.SubCommands.Grab.Execute
- uid: System.ArraySegment{System.String}
  commentId: T:System.ArraySegment{System.String}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<String>
  nameWithType: ArraySegment<String>
  fullName: System.ArraySegment<System.String>
  nameWithType.vb: ArraySegment(Of String)
  fullName.vb: System.ArraySegment(Of System.String)
  name.vb: ArraySegment(Of String)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ICommandSender
  isExternal: true
  name: ICommandSender
  nameWithType: ICommandSender
  fullName: ICommandSender
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
