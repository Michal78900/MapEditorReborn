### YamlMime:ManagedReference
items:
- uid: MapEditorReborn.Events.Handlers.Schematic
  commentId: T:MapEditorReborn.Events.Handlers.Schematic
  id: Schematic
  parent: MapEditorReborn.Events.Handlers
  children:
  - MapEditorReborn.Events.Handlers.Schematic.ButtonInteracted
  - MapEditorReborn.Events.Handlers.Schematic.SchematicDestroyed
  - MapEditorReborn.Events.Handlers.Schematic.SchematicSpawned
  langs:
  - csharp
  - vb
  name: Schematic
  nameWithType: Schematic
  fullName: MapEditorReborn.Events.Handlers.Schematic
  type: Class
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Schematic.cs
    id: Schematic
    path: Events/Handlers/Schematic.cs
    startLine: 17
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  summary: "\nSchematic related events.\n"
  example: []
  syntax:
    content: public static class Schematic
    content.vb: Public Module Schematic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MapEditorReborn.Events.Handlers.Schematic.SchematicSpawned
  commentId: E:MapEditorReborn.Events.Handlers.Schematic.SchematicSpawned
  id: SchematicSpawned
  parent: MapEditorReborn.Events.Handlers.Schematic
  langs:
  - csharp
  - vb
  name: SchematicSpawned
  nameWithType: Schematic.SchematicSpawned
  fullName: MapEditorReborn.Events.Handlers.Schematic.SchematicSpawned
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Schematic.cs
    id: SchematicSpawned
    path: Events/Handlers/Schematic.cs
    startLine: 19
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  syntax:
    content: public static event CustomEventHandler<SchematicSpawnedEventArgs> SchematicSpawned
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs}
    content.vb: Public Shared Event SchematicSpawned As CustomEventHandler(Of SchematicSpawnedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.Schematic.ButtonInteracted
  commentId: E:MapEditorReborn.Events.Handlers.Schematic.ButtonInteracted
  id: ButtonInteracted
  parent: MapEditorReborn.Events.Handlers.Schematic
  langs:
  - csharp
  - vb
  name: ButtonInteracted
  nameWithType: Schematic.ButtonInteracted
  fullName: MapEditorReborn.Events.Handlers.Schematic.ButtonInteracted
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Schematic.cs
    id: ButtonInteracted
    path: Events/Handlers/Schematic.cs
    startLine: 21
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  syntax:
    content: public static event CustomEventHandler<ButtonInteractedEventArgs> ButtonInteracted
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs}
    content.vb: Public Shared Event ButtonInteracted As CustomEventHandler(Of ButtonInteractedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MapEditorReborn.Events.Handlers.Schematic.SchematicDestroyed
  commentId: E:MapEditorReborn.Events.Handlers.Schematic.SchematicDestroyed
  id: SchematicDestroyed
  parent: MapEditorReborn.Events.Handlers.Schematic
  langs:
  - csharp
  - vb
  name: SchematicDestroyed
  nameWithType: Schematic.SchematicDestroyed
  fullName: MapEditorReborn.Events.Handlers.Schematic.SchematicDestroyed
  type: Event
  source:
    remote:
      path: C:/Users/minerpl/RiderProjects/MapEditorReborn/Events/Handlers/Schematic.cs
    id: SchematicDestroyed
    path: Events/Handlers/Schematic.cs
    startLine: 23
  assemblies:
  - MapEditorReborn
  namespace: MapEditorReborn.Events.Handlers
  syntax:
    content: public static event CustomEventHandler<SchematicDestroyedEventArgs> SchematicDestroyed
    return:
      type: CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs}
    content.vb: Public Shared Event SchematicDestroyed As CustomEventHandler(Of SchematicDestroyedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MapEditorReborn.Events.Handlers
  commentId: N:MapEditorReborn.Events.Handlers
  name: MapEditorReborn.Events.Handlers
  nameWithType: MapEditorReborn.Events.Handlers
  fullName: MapEditorReborn.Events.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<SchematicSpawnedEventArgs>
  nameWithType: CustomEventHandler<SchematicSpawnedEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs>
  nameWithType.vb: CustomEventHandler(Of SchematicSpawnedEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs)
  name.vb: CustomEventHandler(Of SchematicSpawnedEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs
    name: SchematicSpawnedEventArgs
    nameWithType: SchematicSpawnedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs
    name: SchematicSpawnedEventArgs
    nameWithType: SchematicSpawnedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SchematicSpawnedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler`1
  isExternal: true
  name: CustomEventHandler<>
  nameWithType: CustomEventHandler<>
  fullName: CustomEventHandler<>
  nameWithType.vb: CustomEventHandler(Of )
  fullName.vb: CustomEventHandler(Of )
  name.vb: CustomEventHandler(Of )
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<ButtonInteractedEventArgs>
  nameWithType: CustomEventHandler<ButtonInteractedEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs>
  nameWithType.vb: CustomEventHandler(Of ButtonInteractedEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs)
  name.vb: CustomEventHandler(Of ButtonInteractedEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs
    name: ButtonInteractedEventArgs
    nameWithType: ButtonInteractedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs
    name: ButtonInteractedEventArgs
    nameWithType: ButtonInteractedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.ButtonInteractedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs}
  commentId: '!:CustomEventHandler{MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs}'
  definition: CustomEventHandler`1
  name: CustomEventHandler<SchematicDestroyedEventArgs>
  nameWithType: CustomEventHandler<SchematicDestroyedEventArgs>
  fullName: CustomEventHandler<MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs>
  nameWithType.vb: CustomEventHandler(Of SchematicDestroyedEventArgs)
  fullName.vb: CustomEventHandler(Of MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs)
  name.vb: CustomEventHandler(Of SchematicDestroyedEventArgs)
  spec.csharp:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs
    name: SchematicDestroyedEventArgs
    nameWithType: SchematicDestroyedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: CustomEventHandler`1
    name: CustomEventHandler
    nameWithType: CustomEventHandler
    fullName: CustomEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs
    name: SchematicDestroyedEventArgs
    nameWithType: SchematicDestroyedEventArgs
    fullName: MapEditorReborn.Events.EventArgs.SchematicDestroyedEventArgs
  - name: )
    nameWithType: )
    fullName: )
